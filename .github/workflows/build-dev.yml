name: Build and release dev apps

on:
  pull_request:
    branches: [dev]
    types:
      - opened
      - reopened
      - synchronize

jobs:
  release-dev:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
          xcrun --find notarytool

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: false

          # macOS certificate files
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_psw }}

        env:
          # macOS notarization API key
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASSWORD: ${{ secrets.apple_id_password }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.apple_id_password }}
          APPLE_TEAM_ID: 8D66VDADVH
          DEBUG: electron-notarize*

      - name: Upload artifacts for Linux
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: linux-app.AppImage
          path: 'dist/*.AppImage'
          if-no-files-found: error

      - name: Upload artifacts for MacOS
        uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-13'
        with:
          name: macos-app.dmg
          path: 'dist/*.dmg'
          if-no-files-found: error

      - name: Upload artifacts for Windows
        uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest'
        with:
          name: win-app.exe
          path: 'dist\*.exe'
          if-no-files-found: error
